@page "/food/{FoodId}/edit"

<style>
    .main-title {
        text-align: center;
        margin-bottom: 1.2em;
    }
</style>

<h1 class="row main-title">
    Szerkesztő
    <NavLink class="ml-auto mr-4 nav-link" href="foodlist">
        Back
        <span class="oi oi-arrow-right" aria-hidden="true"></span>
    </NavLink>
</h1>

@if (Food == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <FoodForm ButtonTitle="Szerkesztés" SubmitForm="@EditCustomerOrder" Food="@Food"></FoodForm>
    <button type="button" class="btn btn-danger mt-2" @onclick="@DeleteCustomerOrder">Delete</button>
}

@code{

        [Inject]
        public HttpClient HttpClient { get; set; }

        [Inject]
        public NavigationManager NavigationManager { get; set; }

        [Parameter]
        public string FoodId { get; set; }

        public Food Food { get; set; }

        protected override async Task OnInitializedAsync()
        {
            Food = await HttpClient.GetFromJsonAsync<Food>($"food/{FoodId}");
            await base.OnInitializedAsync();
        }

        private async Task EditCustomerOrder()
        {
            await HttpClient.PutAsJsonAsync($"food/{FoodId}", Food);
            NavigationManager.NavigateTo($"food/{FoodId}");
        }

        private async Task DeleteCustomerOrder()
        {
            await HttpClient.DeleteAsync($"food/{FoodId}");
            NavigationManager.NavigateTo("food");
        }

}