@page "/order/list"

@using Radzen

@inject HttpClient HttpClient

<RadzenCard>
    <h1>Rendelések lista</h1>
    @if(OrderModelList == null)
    {
        <RadzenCard>
            <h2>Loading...</h2>
        </RadzenCard>
    }
    else
    {
        @foreach(var order in OrderModelList)
        {
            <RadzenCard class="d-flex flex-row p-4" style="font-size:x-large;">
                <div class="flex-column">
                    <div>@order.Order.Id</div>
                    <div>@order.Order.CreatedDate</div>
                    <div>@order.Order.Price</div>
                    <select class="form-control" @bind="@order.Order.Status" style="width: fit-content">
                        @foreach (var orderStatus in OrderStatusList)
                        {
                            <option value="@orderStatus">@orderStatus</option>
                        }
                    </select>
                </div>

                <RadzenCard>
                    @foreach(var food in order.Foods)
                    {
                        <h4>@food.Name - @food.Price Ft</h4>
                    }
                </RadzenCard>
            </RadzenCard>
        }
    }
</RadzenCard>


@code {

    public IList<Order> SelectedOrders { get; set; }

    public List<Order> Orders { get; set; }
    public List<ShoppingCartModel> OrderModelList { get; set; } = new List<ShoppingCartModel>();
    public List<OrderStatus> OrderStatusList = Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>().ToList();

    protected override async Task OnInitializedAsync()
    {

        Orders = await HttpClient.GetFromJsonAsync<List<Order>>("order");

        foreach(var order in Orders)
        {
            ShoppingCartModel orderModel = new ShoppingCartModel();
            var allOrdersFromDb = await HttpClient.GetFromJsonAsync<List<OrderedFood>>("food/ordered");
            var allFoodsFromDb = await HttpClient.GetFromJsonAsync<List<Food>>("food");

            orderModel.Order = order;
            var orderedFoods = allOrdersFromDb.Where(x => x.OrderId == order.Id).ToList();

            foreach(var orderedFood in orderedFoods)
            {
                var food = await HttpClient.GetFromJsonAsync<Food>($"food/{orderedFood.FoodId}");
                orderModel.Foods.Add(food);
            }

            OrderModelList.Add(orderModel);
        }
    }
}
